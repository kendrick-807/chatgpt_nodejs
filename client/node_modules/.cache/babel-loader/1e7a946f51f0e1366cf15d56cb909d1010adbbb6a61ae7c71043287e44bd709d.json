{"ast":null,"code":"var _jsxFileName = \"/Users/kendrick807/Documents/2022/chatgpt_nodejs/client/src/components/Home.jsx\";\nimport { Link } from \"react-router-dom\";\n// import styles from './Home.module.css';\nimport React, { useState, useEffect } from \"react\";\n\n// function handleChange (e) {\n//     this.setState({[e.target.name]: e.target.value});\n// }\n//\n// function handleSubmit(e) {\n//     alert('A form was submitted: ' + this.state);\n//\n//     fetch('http://localhost:3000/store-data', {\n//         method: 'POST',\n//         // We convert the React state to JSON and send it as the POST body\n//         body: JSON.stringify(this.state)\n//     }).then(function(response) {\n//         console.log(response)\n//         return response.json();\n//     });\n//\n//     e.preventDefault();\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  // const [name, setName] = useState(\"\");\n  // const [email, setEmail] = useState(\"\");\n  // const [mobileNumber, setMobileNumber] = useState(\"\");\n  // const [message, setMessage] = useState(\"\");\n  //\n  // let handleSubmit = async (e) => {\n  //     e.preventDefault();\n  //     try {\n  //         let res = await fetch(\"http://localhost:8000/message\", {\n  //             method: \"POST\",\n  //             body: JSON.stringify({\n  //                 name: name,\n  //                 email: email,\n  //                 mobileNumber: mobileNumber,\n  //             }),\n  //         });\n  //         let resJson = await res.json();\n  //         if (res.status === 200) {\n  //             setName(\"\");\n  //             setEmail(\"\");\n  //             setMessage(\"User created successfully\");\n  //         } else {\n  //             setMessage(\"Some error occured\");\n  //         }\n  //     } catch (err) {\n  //         console.log(err);\n  //     }\n  // };\n  let handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n  let handleSubmit = event => {\n    alert('A form was submitted: ' + this.state);\n    fetch('http://localhost:3000/store-data', {\n      method: 'POST',\n      // We convert the React state to JSON and send it as the POST body\n      body: JSON.stringify(this.state)\n    }).then(function (response) {\n      console.log(response);\n      return response.json();\n    });\n    event.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.value,\n          name: \"name\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Link","React","useState","useEffect","jsxDEV","_jsxDEV","Home","handleChange","event","setState","target","name","value","handleSubmit","alert","state","fetch","method","body","JSON","stringify","then","response","console","log","json","preventDefault","className","children","onSubmit","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kendrick807/Documents/2022/chatgpt_nodejs/client/src/components/Home.jsx"],"sourcesContent":["\nimport { Link } from \"react-router-dom\";\n// import styles from './Home.module.css';\nimport React, { useState, useEffect } from \"react\";\n\n// function handleChange (e) {\n//     this.setState({[e.target.name]: e.target.value});\n// }\n//\n// function handleSubmit(e) {\n//     alert('A form was submitted: ' + this.state);\n//\n//     fetch('http://localhost:3000/store-data', {\n//         method: 'POST',\n//         // We convert the React state to JSON and send it as the POST body\n//         body: JSON.stringify(this.state)\n//     }).then(function(response) {\n//         console.log(response)\n//         return response.json();\n//     });\n//\n//     e.preventDefault();\n// }\n\n\n\nconst Home = () => {\n    // const [name, setName] = useState(\"\");\n    // const [email, setEmail] = useState(\"\");\n    // const [mobileNumber, setMobileNumber] = useState(\"\");\n    // const [message, setMessage] = useState(\"\");\n    //\n    // let handleSubmit = async (e) => {\n    //     e.preventDefault();\n    //     try {\n    //         let res = await fetch(\"http://localhost:8000/message\", {\n    //             method: \"POST\",\n    //             body: JSON.stringify({\n    //                 name: name,\n    //                 email: email,\n    //                 mobileNumber: mobileNumber,\n    //             }),\n    //         });\n    //         let resJson = await res.json();\n    //         if (res.status === 200) {\n    //             setName(\"\");\n    //             setEmail(\"\");\n    //             setMessage(\"User created successfully\");\n    //         } else {\n    //             setMessage(\"Some error occured\");\n    //         }\n    //     } catch (err) {\n    //         console.log(err);\n    //     }\n    // };\n    let handleChange = (event) => {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    let handleSubmit = (event) => {\n        alert('A form was submitted: ' + this.state);\n\n        fetch('http://localhost:3000/store-data', {\n            method: 'POST',\n            // We convert the React state to JSON and send it as the POST body\n            body: JSON.stringify(this.state)\n        }).then(function(response) {\n            console.log(response)\n            return response.json();\n        });\n\n        event.preventDefault();\n    }\n\n    return (\n        <div className=\"App\">\n            <form onSubmit={this.handleSubmit}>\n                <label>\n                    Name:\n                    <input type=\"text\" value={this.state.value} name=\"name\" onChange={this.handleChange} />\n                </label>\n                <input type=\"submit\" value=\"Submit\" />\n            </form>\n        </div>\n    );\n}\n\nexport default Home;"],"mappings":";AACA,SAASA,IAAI,QAAQ,kBAAkB;AACvC;AACA,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAIC,YAAY,GAAIC,KAAK,IAAK;IAC1B,IAAI,CAACC,QAAQ,CAAC;MAAC,CAACD,KAAK,CAACE,MAAM,CAACC,IAAI,GAAGH,KAAK,CAACE,MAAM,CAACE;IAAK,CAAC,CAAC;EAC5D,CAAC;EAED,IAAIC,YAAY,GAAIL,KAAK,IAAK;IAC1BM,KAAK,CAAC,wBAAwB,GAAG,IAAI,CAACC,KAAK,CAAC;IAE5CC,KAAK,CAAC,kCAAkC,EAAE;MACtCC,MAAM,EAAE,MAAM;MACd;MACAC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACL,KAAK;IACnC,CAAC,CAAC,CAACM,IAAI,CAAC,UAASC,QAAQ,EAAE;MACvBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB,OAAOA,QAAQ,CAACG,IAAI,EAAE;IAC1B,CAAC,CAAC;IAEFjB,KAAK,CAACkB,cAAc,EAAE;EAC1B,CAAC;EAED,oBACIrB,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAChBvB,OAAA;MAAMwB,QAAQ,EAAE,IAAI,CAAChB,YAAa;MAAAe,QAAA,gBAC9BvB,OAAA;QAAAuB,QAAA,GAAO,OAEH,eAAAvB,OAAA;UAAOyB,IAAI,EAAC,MAAM;UAAClB,KAAK,EAAE,IAAI,CAACG,KAAK,CAACH,KAAM;UAACD,IAAI,EAAC,MAAM;UAACoB,QAAQ,EAAE,IAAI,CAACxB;QAAa;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACnF,eACR9B,OAAA;QAAOyB,IAAI,EAAC,QAAQ;QAAClB,KAAK,EAAC;MAAQ;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACnC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEd,CAAC;AAAAC,EAAA,GA3DK9B,IAAI;AA6DV,eAAeA,IAAI;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}